<IfModule mod_ssl.c>
#  Production build running as systemd service of tomcat7 folder in /data/apache-tomcat-7.0.65

<VirtualHost *:443>
		ServerAdmin webmaster@localhost
                ServerName checoutme.innowi.com
#    Alias "/app" "/var/www/html/app"
                RemoteIPHeader X-Forwarded-For

# For AWS ALB Health Check to Pass
RewriteEngine on 
RewriteCond %{HTTP:X-Forwarded-Proto} ^http$
RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

#       <Directory "/var/www/html/app">
#        Options Indexes FollowSymLinks MultiViews
#        AllowOverride None
#        Require all granted
#        Header set Access-Control-Allow-Origin "*"
#        Header add Access-Control-Allow-Headers "origin, x-requested-with, content-type"
#        Header add Access-Control-Allow-Methods "PUT, GET, POST, DELETE, OPTIONS"
#       </Directory>

#    ServerName apis.innowi.com

#    ProxyPassMatch ^/app !
    ProxyPreserveHost On
    ProxyPass / http://127.0.0.1:8080/
    ProxyPassReverse / http://127.0.0.1:8080/
		#DocumentRoot /var/www/html
		ErrorLog ${APACHE_LOG_DIR}/error.log
		CustomLog ${APACHE_LOG_DIR}/access.log combined
		SSLEngine on
		SSLCertificateFile	/etc/ssl/certs/ssl-cert-snakeoil.pem
		SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

</VirtualHost>


<VirtualHost *:443>

   ServerAdmin webmaster@localhost
   ServerName checout.innowi.com
   RemoteIPHeader X-Forwarded-For


# For AWS ALB Health Check to Pass
RewriteEngine on
RewriteCond %{HTTP:X-Forwarded-Proto} ^http$
RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

       <Directory "/var/www/html/app">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride None
        Require all granted
        Header set Access-Control-Allow-Origin "*"
        Header add Access-Control-Allow-Headers "origin, x-requested-with, content-type"
        Header add Access-Control-Allow-Methods "PUT, GET, POST, DELETE, OPTIONS"
       </Directory>


    ProxyPreserveHost On
    ProxyPass / http://127.0.0.1:81/
    ProxyPassReverse / http://127.0.0.1:8081/
                #DocumentRoot /var/www/html
                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/access.log combined
                SSLEngine on
                SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
                SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

</VirtualHost>

###
# timeclock.innowi.com
<VirtualHost *:443>
                ServerAdmin webmaster@localhost
                ServerName timeclock.innowi.com
                RemoteIPHeader X-Forwarded-For


# For AWS ALB Health Check to Pass
RewriteEngine on
RewriteCond %{HTTP:X-Forwarded-Proto} ^http$
RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

       <Directory "/var/www/html/app">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride None
        Require all granted
        Header set Access-Control-Allow-Origin "*"
        Header add Access-Control-Allow-Headers "origin, x-requested-with, content-type"
        Header add Access-Control-Allow-Methods "PUT, GET, POST, DELETE, OPTIONS"
       </Directory>


#    ProxyPreserveHost On
#    ProxyPass / http://127.0.0.1:82/
#    ProxyPassReverse / http://127.0.0.1:82/
                DocumentRoot /var/www/html/timeclock
                ErrorLog ${APACHE_LOG_DIR}/timeclock-error.log
                CustomLog ${APACHE_LOG_DIR}/timeclock-access.log combined
                SSLEngine on
                SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
                SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

</VirtualHost>

<VirtualHost *:443>
                ServerAdmin webmaster@localhost
                ServerName dev-support.innowi.com
                RemoteIPHeader X-Forwarded-For

# For AWS ALB Health Check to Pass
RewriteEngine on
RewriteCond %{HTTP:X-Forwarded-Proto} ^http$
RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

# If an existing asset or directory is requested go to it as it is
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]

# If the requested resource doesn't exist, use index.html
RewriteRule ^ /index.html
###############################################################
       <Directory "/var/www/html/dev-support">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride None
        Require all granted
        Header set Access-Control-Allow-Origin "*"
        Header add Access-Control-Allow-Headers "origin, x-requested-with, content-type"
        Header add Access-Control-Allow-Methods "PUT, GET, POST, DELETE, OPTIONS"
       </Directory>

                DocumentRoot /var/www/html/dev-support
                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/dev-support.log combined
                SSLEngine on
                SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
                SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

</VirtualHost>





<VirtualHost *:443>
                ServerAdmin webmaster@localhost
                ServerName support.innowi.com
                RemoteIPHeader X-Forwarded-For

# For AWS ALB Health Check to Pass
RewriteEngine on
RewriteCond %{HTTP:X-Forwarded-Proto} ^http$
RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

# If an existing asset or directory is requested go to it as it is
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]

# If the requested resource doesn't exist, use index.html
RewriteRule ^ /index.html
###############################################################
       <Directory "/var/www/html/support">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride None
        Require all granted
        Header set Access-Control-Allow-Origin "*"
        Header add Access-Control-Allow-Headers "origin, x-requested-with, content-type"
        Header add Access-Control-Allow-Methods "PUT, GET, POST, DELETE, OPTIONS"
       </Directory>

                DocumentRoot /var/www/html/support
                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/dev-support.log combined
                SSLEngine on
                SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
                SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

</VirtualHost>



<VirtualHost *:443>
                ServerAdmin webmaster@localhost
                ServerName dev-communication.innowi.com
                RemoteIPHeader X-Forwarded-For

# For AWS ALB Health Check to Pass
RewriteEngine on
RewriteCond %{HTTP:X-Forwarded-Proto} ^http$
RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

# If an existing asset or directory is requested go to it as it is
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]

# If the requested resource doesn't exist, use index.html
RewriteRule ^ /index.html
###############################################################
       <Directory "/var/www/html/dev-comm">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride None
        Require all granted
        Header set Access-Control-Allow-Origin "*"
        Header add Access-Control-Allow-Headers "origin, x-requested-with, content-type"
        Header add Access-Control-Allow-Methods "PUT, GET, POST, DELETE, OPTIONS"
       </Directory>

                DocumentRoot /var/www/html/dev-comm
                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/dev-comm-web.log combined
                SSLEngine on
                SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
                SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

</VirtualHost>


<VirtualHost *:443>
                ServerAdmin webmaster@localhost
                ServerName dev-inventory.innowi.com
                RemoteIPHeader X-Forwarded-For
RewriteEngine on
RewriteCond %{HTTP:X-Forwarded-Proto} ^http$
RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]
RewriteRule ^ /index.html
       <Directory "/var/www/html/dev-inventory/inventory-management">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride None
        Require all granted
        Header set Access-Control-Allow-Origin "*"
        Header add Access-Control-Allow-Headers "origin, x-requested-with, content-type"
        Header add Access-Control-Allow-Methods "PUT, GET, POST, DELETE, OPTIONS"
       </Directory>

                DocumentRoot /var/www/html/dev-inventory/inventory-management
                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/dev-inventory-web.log combined
                SSLEngine on
                SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
                SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

</VirtualHost>
# prod-comm -> voice.innowi.com

<VirtualHost *:443>
                ServerAdmin webmaster@localhost
                ServerName voice.innowi.com
                RemoteIPHeader X-Forwarded-For
RewriteEngine on
RewriteCond %{HTTP:X-Forwarded-Proto} ^http$
RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]
RewriteRule ^ /index.html
       <Directory "/var/www/html/prod-comm">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride None
        Require all granted
        Header set Access-Control-Allow-Origin "*"
        Header add Access-Control-Allow-Headers "origin, x-requested-with, content-type"
        Header add Access-Control-Allow-Methods "PUT, GET, POST, DELETE, OPTIONS"
       </Directory>

                DocumentRoot /var/www/html/prod-comm
                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/comm-prod-web.log combined
                SSLEngine on
                SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
                SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

</VirtualHost>

<VirtualHost *:443>
                ServerAdmin webmaster@localhost
                ServerName inventory.innowi.com
                RemoteIPHeader X-Forwarded-For
RewriteEngine on
RewriteCond %{HTTP:X-Forwarded-Proto} ^http$
RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]
RewriteRule ^ /index.html
       <Directory "/var/www/html/inventory/inventory-management">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride None
        Require all granted
        Header set Access-Control-Allow-Origin "*"
        Header add Access-Control-Allow-Headers "origin, x-requested-with, content-type"
        Header add Access-Control-Allow-Methods "PUT, GET, POST, DELETE, OPTIONS"
       </Directory>

                DocumentRoot /var/www/html/inventory/inventory-management
                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/inventory-web.log combined
                SSLEngine on
                SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
                SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

</VirtualHost>
#</IfModule>
#############################################################################

<VirtualHost *:443>
                ServerAdmin webmaster@localhost
                ServerName restaurant.innowi.com
                RemoteIPHeader X-Forwarded-For

# For AWS ALB Health Check to Pass
RewriteEngine on
RewriteCond %{HTTP:X-Forwarded-Proto} ^http$
RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

# If an existing asset or directory is requested go to it as it is
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]

# If the requested resource doesn't exist, use index.html
RewriteRule ^ /index.html
###############################################################
       <Directory "/var/www/html/restaurant">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride None
        Require all granted
        Header set Access-Control-Allow-Origin "*"
        Header add Access-Control-Allow-Headers "origin, x-requested-with, content-type"
        Header add Access-Control-Allow-Methods "PUT, GET, POST, DELETE, OPTIONS"
       </Directory>

                DocumentRoot /var/www/html/restaurant
                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/restaurant.log combined
                SSLEngine on
                SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
                SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

</VirtualHost>

###################################

<VirtualHost *:443>
                ServerAdmin webmaster@localhost
                ServerName dev-restaurant.innowi.com
                RemoteIPHeader X-Forwarded-For

# For AWS ALB Health Check to Pass
RewriteEngine on
RewriteCond %{HTTP:X-Forwarded-Proto} ^http$
RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

# If an existing asset or directory is requested go to it as it is
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]

# If the requested resource doesn't exist, use index.html
RewriteRule ^ /index.html
###############################################################
       <Directory "/var/www/html/restaurant-dev">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride None
        Require all granted
        Header set Access-Control-Allow-Origin "*"
        Header add Access-Control-Allow-Headers "origin, x-requested-with, content-type"
        Header add Access-Control-Allow-Methods "PUT, GET, POST, DELETE, OPTIONS"
       </Directory>

                DocumentRoot /var/www/html/restaurant-dev
                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/restaurant-dev.log combined
                SSLEngine on
                SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
                SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

</VirtualHost>

# dev-online-ordering.innowi.com
<VirtualHost *:443>
                ServerAdmin webmaster@localhost
                ServerName dev-online-ordering.innowi.com
                RemoteIPHeader X-Forwarded-For

# For AWS ALB Health Check to Pass
RewriteEngine on
RewriteCond %{HTTP:X-Forwarded-Proto} ^http$
RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

# If an existing asset or directory is requested go to it as it is
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]

# If the requested resource doesn't exist, use index.html
RewriteRule ^ /index.html
###############################################################
       <Directory "/var/www/html/onlineorder-dev/online-ordering">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride None
        Require all granted
        Header set Access-Control-Allow-Origin "*"
        Header add Access-Control-Allow-Headers "origin, x-requested-with, content-type"
        Header add Access-Control-Allow-Methods "PUT, GET, POST, DELETE, OPTIONS"
       </Directory>

                DocumentRoot /var/www/html/onlineorder-dev/online-ordering
                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/restaurant-dev.log combined
                SSLEngine on
                SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
                SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

</VirtualHost>


# online-ordering.innowi.com
<VirtualHost *:443>
                ServerAdmin webmaster@localhost
                ServerName online-ordering.innowi.com
                RemoteIPHeader X-Forwarded-For

# For AWS ALB Health Check to Pass
RewriteEngine on
RewriteCond %{HTTP:X-Forwarded-Proto} ^http$
RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

# If an existing asset or directory is requested go to it as it is
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]

# If the requested resource doesn't exist, use index.html
RewriteRule ^ /index.html
###############################################################
       <Directory "/var/www/html/onlineorder/online-ordering">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride None
        Require all granted
        Header set Access-Control-Allow-Origin "*"
        Header add Access-Control-Allow-Headers "origin, x-requested-with, content-type"
        Header add Access-Control-Allow-Methods "PUT, GET, POST, DELETE, OPTIONS"
       </Directory>

                DocumentRoot /var/www/html/onlineorder/online-ordering
                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/restaurant-onlinr-ordeing.log combined
                SSLEngine on
                SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
                SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

</VirtualHost>


<VirtualHost *:443>
                ServerAdmin webmaster@localhost
                ServerName prerestaurant.innowi.com
                RemoteIPHeader X-Forwarded-For

# For AWS ALB Health Check to Pass
RewriteEngine on
RewriteCond %{HTTP:X-Forwarded-Proto} ^http$
RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

# If an existing asset or directory is requested go to it as it is
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]

# If the requested resource doesn't exist, use index.html
RewriteRule ^ /index.html
###############################################################
       <Directory "/var/www/html/prerestaurant">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride None
        Require all granted
        Header set Access-Control-Allow-Origin "*"
        Header add Access-Control-Allow-Headers "origin, x-requested-with, content-type"
        Header add Access-Control-Allow-Methods "PUT, GET, POST, DELETE, OPTIONS"
       </Directory>

                DocumentRoot /var/www/html/prerestaurant
                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/prerestaurant.log combined
                SSLEngine on
                SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
                SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

</VirtualHost>

## ########################################################
<VirtualHost *:443>
                ServerAdmin webmaster@localhost
                ServerName qa-restaurant.innowi.com
                RemoteIPHeader X-Forwarded-For

# For AWS ALB Health Check to Pass
RewriteEngine on
RewriteCond %{HTTP:X-Forwarded-Proto} ^http$
RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

# If an existing asset or directory is requested go to it as it is
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]

# If the requested resource doesn't exist, use index.html
RewriteRule ^ /index.html
###############################################################
       <Directory "/var/www/html/restaurant-qa">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride None
        Require all granted
        Header set Access-Control-Allow-Origin "*"
        Header add Access-Control-Allow-Headers "origin, x-requested-with, content-type"
        Header add Access-Control-Allow-Methods "PUT, GET, POST, DELETE, OPTIONS"
       </Directory>

                DocumentRoot /var/www/html/restaurant-qa
                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/restaurant-qa.log combined
                SSLEngine on
                SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
                SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

</VirtualHost>
</IfModule>
